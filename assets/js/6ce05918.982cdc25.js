"use strict";(self.webpackChunkverkle_dev=self.webpackChunkverkle_dev||[]).push([[741],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=o.createContext({}),s=function(e){var t=o.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(m.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=s(n),d=a,u=h["".concat(m,".").concat(d)]||h[d]||c[d]||r;return n?o.createElement(u,i(i({ref:t},p),{},{components:n})):o.createElement(u,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=h;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8150:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const r={},i="Lagrange Polynomial",l={unversionedId:"Theory/Math/lagrange polynomial",id:"Theory/Math/lagrange polynomial",title:"Lagrange Polynomial",description:"Polynomial interpolation is the interpolation of a given data set by the polynomial of lowest possible degree that passes through the points of the dataset.",source:"@site/docs/Theory/Math/lagrange polynomial.md",sourceDirName:"Theory/Math",slug:"/Theory/Math/lagrange polynomial",permalink:"/docs/Theory/Math/lagrange polynomial",draft:!1,editUrl:"https://github.com/ethereum/verkle-dev-website/blob/master/docs/Theory/Math/lagrange polynomial.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Elliptic Curves",permalink:"/docs/Theory/Math/elliptic curves"},next:{title:"Dividing In Lagrange basis when one of the points is zero - Generalised",permalink:"/docs/Theory/dividing_on_zero"}},m={},s=[{value:"Definition",id:"definition",level:2},{value:"Uses",id:"uses",level:2},{value:"Vector commitment and Verkle Tries",id:"vector-commitment-and-verkle-tries",level:3},{value:"KZG commitments",id:"kzg-commitments",level:5},{value:"Pedersen vector commitment",id:"pedersen-vector-commitment",level:5}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lagrange-polynomial"},"Lagrange Polynomial"),(0,a.kt)("p",null,"Polynomial interpolation is the interpolation of a given data set by the polynomial of lowest possible degree that passes through the points of the dataset.\nLagrange interpolating polynomial is the unique polynomial of lowest degree that interpolates a given set of data."),(0,a.kt)("h2",{id:"definition"},"Definition"),(0,a.kt)("p",null,"The Lagrange interpolating polynomial for nodes ${y_0, y_1, ..., y_k}$ is the linear combination:"),(0,a.kt)("p",null,"$$\\sum_{j=0}^{k} {y_j*l_j(x)}$$"),(0,a.kt)("p",null,"Where $l_j(x)$ is Langrange basis (polynomial): "),(0,a.kt)("p",null,"$$\n\\mathcal{l",(0,a.kt)("em",{parentName:"p"},"j}(x) = \\prod"),"{m \\neq j, m >= 0}\\frac{x -x_m}{x_j - x_m}\n$$"),(0,a.kt)("p",null,"As mentioned above the interpolating polynomial is unique. This characteristic allows uses in cryptography such as: Shamir's secret sharing scheme and KZC polynomial commitmens (Kate commitment) ",(0,a.kt)("em",{parentName:"p"},"[https://en.m.wikipedia.org/wiki/Lagrange_polynomial]")),(0,a.kt)("h2",{id:"uses"},"Uses"),(0,a.kt)("h3",{id:"vector-commitment-and-verkle-tries"},"Vector commitment and Verkle Tries"),(0,a.kt)("p",null,"A commitment scheme allows one to commit to a chosen value (or statement) while keeping it hidden to others, with the ability to reveal the committed value later ",(0,a.kt)("em",{parentName:"p"},"[https://en.m.wikipedia.org/wiki/Commitment_scheme]"),"."),(0,a.kt)("p",null,"In Verkle Tree, the commitment method is called vector commitment ",(0,a.kt)("em",{parentName:"p"},"[https://hackmd.io/@sin7y/rJZZy_mD9]"),"."),(0,a.kt)("p",null,"A vector commitment allows to commit to an ordered sequences of values in such a way that is later possible to open the commitment only with the reference to a specific position. ",(0,a.kt)("em",{parentName:"p"},"[https://eprint.iacr.org/2011/495.pdf]",", (Catalano, Fiore)"),"."),(0,a.kt)("p",null,"In practice, it is used a more poweful, efficient and simplest method than a vector commitment, called polynomial commitment. Polynomial commitments let you hash and evalaute in any point the hashed polynomial (the polynomail can be found-defined with Lagrange interpolation). The two polynomial commitment schemes easiest to be used are: ",(0,a.kt)("strong",{parentName:"p"},"KZG and bulletprof-style commitments")," ",(0,a.kt)("em",{parentName:"p"},"[https://vitalik.ca/general/2021/06/18/verkle.html]"),"."),(0,a.kt)("h5",{id:"kzg-commitments"},"KZG commitments"),(0,a.kt)("p",null,"The Kate commitment scheme is designed as a polynomial commitment, where it also allows a vector commitment. A vector commitment commits to a vector $a",(0,a.kt)("em",{parentName:"p"},"0,...,a"),"{n-1}$ and lets you prove that you committed to $a_i$ for some $i$. This could be reproduced using the Kate commitment scheme, which is a polynomial $p(X)$ where for all $i$, $p(i)= a_i$. This polynomial could be computed using Lagrange interpolation. ",(0,a.kt)("em",{parentName:"p"},"[https://dankradfeist.de/ethereum/2020/06/16/kate-polynomial-commitments.html]",".")),(0,a.kt)("h5",{id:"pedersen-vector-commitment"},"Pedersen vector commitment"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},'"It is shown how to distribute a secret to n persons such that each person can verify that he has received correct information about the secret without talking with other persons. Any')," $k$ ",(0,a.kt)("em",{parentName:"p"},"of these persons can later find the secret")," $1<=k<=n$ , ",(0,a.kt)("em",{parentName:"p"},"whereas fewer than")," $k$ ",(0,a.kt)("em",{parentName:"p"},'persons get no information about the secret."'),"\n",(0,a.kt)("em",{parentName:"p"},"[https://link.springer.com/content/pdf/10.1007/3-540-46766-1_9.pdf]",".")),(0,a.kt)("p",null,"Here you will find, that all verification of shares and the scheme are based in Lagrange Polynomial (section 4)."))}c.isMDXComponent=!0}}]);