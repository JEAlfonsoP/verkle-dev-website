"use strict";(self.webpackChunkverkle_dev=self.webpackChunkverkle_dev||[]).push([[675],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var m=n.createContext({}),p=function(e){var t=n.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,m=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(r),y=i,f=s["".concat(m,".").concat(y)]||s[y]||u[y]||o;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function y(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=s;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},4991:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const o={},a="Implementation",l={unversionedId:"Implementation/summary",id:"Implementation/summary",title:"Implementation",description:"Commitment Scheme (IPA Multipoint)",source:"@site/docs/Implementation/summary.md",sourceDirName:"Implementation",slug:"/Implementation/summary",permalink:"/docs/Implementation/summary",draft:!1,editUrl:"https://github.com/ethereum/verkle-dev-website/blob/master/docs/Implementation/summary.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"eip",permalink:"/docs/Implementation/eip"},next:{title:"Connectivity (graph theory)",permalink:"/docs/Theory/Math/connectivity (graph theory)"}},m={},p=[{value:"Commitment Scheme (IPA Multipoint)",id:"commitment-scheme-ipa-multipoint",level:2},{value:"Verkle Trie",id:"verkle-trie",level:2},{value:"Verkle Tree Libraries",id:"verkle-tree-libraries",level:2}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"implementation"},"Implementation"),(0,i.kt)("h2",{id:"commitment-scheme-ipa-multipoint"},"Commitment Scheme (IPA Multipoint)"),(0,i.kt)("p",null,"[Link, Language, Author]"),(0,i.kt)("h2",{id:"verkle-trie"},"Verkle Trie"),(0,i.kt)("p",null,"[Link, Language, Author]"),(0,i.kt)("h2",{id:"verkle-tree-libraries"},"Verkle Tree Libraries"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gballet/go-verkle"},"Go Verkle Tree Library")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/crate-crypto/rust-verkle"},"Rust Verkle Tree Library")))}u.isMDXComponent=!0}}]);